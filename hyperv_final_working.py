#!/usr/bin/python

import os, sys, glob, shutil, subprocess, json, time
from random import randint

destFile="/usr/lib/zabbix/externalscripts/test.csv"

def RandomGen():
	return randint(0,9999999999999999999)

def CsvCopy():
	try:
		newestFile = max(glob.iglob('/mnt/HyperVStorage/*.[Cc][Ss][Vv]'), key=os.path.getctime)
		#Use the below to see the date value obtained from above glob file

		#print newestFile 
		###### To check the contents of the source file ####
		#with open(newestFile,'r') as handle:
		#	for line in handle:
		#		print line
		
		#shutil.copy(newestFile,destFile)
		#print "newfile",newestFile,"destfile",destFile
		os.system("cp %s %s" % (newestFile,destFile))

		###### To check the contents of the destination file ####
		#with open(destFile,'r') as handler:
		#	for line in handler:
		#		print line
		#os.chmod("/usr/lib/zabbix/externalscripts/test.csv",0777)	
		#Above chmod not needed since read is sufficient
		#print "Into CSVCopy try"
		return 1
	except:
		print "ERROR - CSV copy failed"
		sys.exit()

def check_alerts(error,file_handler):
	#print error
	file_handler.seek(0)
	if error in file_handler.read():
		#print "True"
		return True
	else:
		#print "False"
		return False

def HyperVchecks():

     """Open the respective Hyper-V storage file"""
     #with open('COPY.txt','w+') as copy_file:
     with open('PRD.txt','a+') as prd_file:
      with open('BUI.txt','w') as bui_file:
       with open('ACC-PPE.txt','w') as acc_ppe_file:
	with open(destFile,'r') as filehandler:
		
		ticket_list=prd_file.readlines()
		#print "initial ticket_list ",ticket_list
		
		a=[]
		error=""
		data = filehandler.read().decode('utf16')	#MS messes up csv file. Run a decode
		#print "DATA IS ",data
		for line in data.split('\n'):
                        if line.strip() != "":
				a.append(line.strip().split())
		for items in a:
			#if items[1] == "PPE" and float(items[5]) > 95.0:
			if (items[1] == "PRD" and float(items[5]) > 88.0) or (items[1] == "BUI" and float(items[5]) > 95.0) or (items[1] == "ACC-PPE" and float(items[5]) > 95.0):
				error=items[0] + "-" + items[2].replace("\\","/")
				check_alert = check_alerts(error,prd_file)	
				#Check to see if there is an alert alerady opened in OMS
				## Means an alert with eventID is not present already - Adding below
				if check_alert == False:
					eventID = RandomGen()
					#prd_file.write(items[0] + "-" + items[2].replace("\\","/")+","+str(eventID)+"\n")
					ticket_list.append(items[0] + "-" + items[2].replace("\\","/")+","+str(eventID)+"\n")
					#print "ticket list append ", ticket_list
					hostname = items[0]
					trigger = "hyperV storage alert"
					severity = "high"
					date_now = time.strftime('%Y-%m-%d')
					time_now = time.strftime("%H:%M:%S")
					graphurl = "Generated by script " + items[2].replace("\\","/") + " " + "ERROR above threshold - current value " + items[5]
					jsondata = json.dumps({"eventId":eventID,"hostname":hostname,"trigger":trigger,"severity":severity,"date":date_now,"time":time_now,"graphUrl":graphurl})
					#print "host ",hostname," eventID ",eventID," datenow ",date_now," timenow ",time_now," jsondata ",jsondata
					arg1="acomomsdev.service-now.com"
					arg2="OPEN_TICKET"
					#print "came here to open the ticket",eventID," ",items[0],"-",items[2]
					subprocess.call(["php", "/usr/lib/zabbix/externalscripts/zabbix_OMS_ticket_gen.php", arg1, arg2, jsondata])
			else:
				remove_item=items[0] + "-" + items[2].replace("\\","/")
				prd_file.seek(0)
				if remove_item in prd_file.read():
					prd_file.seek(0)
					for line in prd_file:
						if remove_item in line:
							eventID = line.strip().split(',')[1]
							hostname = items[0]
							trigger = "hyperV storage alert"
							severity = "high"
							recovery_date=time.strftime('%Y-%m-%d')
							recovery_time=time.strftime("%H:%M:%S")
							event_ID=int(eventID)
							date_now = time.strftime('%Y-%m-%d')
							time_now = time.strftime("%H:%M:%S")
							jsondata = json.dumps({"eventId":event_ID,"hostname":hostname,"trigger":trigger,"severity":severity,"recoveryDate":date_now,"recoveryTime":time_now})
							arg1="acomomsdev.service-now.com"
							arg2="CLOSE_TICKET"
							#print "came here to close the ticket",event_ID," ",items[0],"-",items[2]
							subprocess.call(["php", "/usr/lib/zabbix/externalscripts/zabbix_OMS_ticket_gen.php", arg1, arg2, jsondata])
							ticket_list.remove(line)
							#print "ticket list item removed"
		prd_file.truncate(0)
		#print "final ticket list ",ticket_list
		for items in ticket_list:
			prd_file.write("%s" % items)

def main():
	""" Main calls """
	a = CsvCopy() # csvcopy commented out for now
	if a==1:
		HyperVchecks()
	else:
		sys.exit()

if __name__ == "__main__":
	main()
